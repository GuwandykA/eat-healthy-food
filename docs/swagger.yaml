basePath: /v1/admin
definitions:
  appresult.AppError:
    properties:
      code:
        type: string
      message:
        type: string
      status:
        type: boolean
    type: object
  appresult.AppSuccess:
    properties:
      code:
        type: string
      data: {}
      message:
        type: string
      status:
        type: boolean
    type: object
  auth.LoginDTO:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  auth.ResUserDTO:
    properties:
      Id:
        type: integer
      avatar:
        type: string
      createdAt:
        type: string
      fullName:
        type: string
      lightMode:
        type: integer
      login:
        type: string
      phoneNumber:
        type: string
      socialMedia:
        type: string
      username:
        type: string
    type: object
  banner.BannerDTO:
    properties:
      Id:
        type: integer
      createdAt:
        type: string
      imagePath:
        type: string
      link:
        type: string
      type:
        type: string
    type: object
  banner.ReqUUIDDTO:
    properties:
      Id:
        type: string
    type: object
  category.CategoryDTO:
    properties:
      Id:
        type: integer
      createdAt:
        type: string
      imagePath:
        type: string
      name:
        $ref: '#/definitions/category.Language'
      status:
        type: boolean
      subName:
        items:
          $ref: '#/definitions/category.Language'
        type: array
    type: object
  category.CategoryIdDTO:
    properties:
      Id:
        type: integer
      name:
        $ref: '#/definitions/category.Language'
      status:
        type: boolean
    type: object
  category.DataDTO:
    properties:
      count:
        type: integer
      subCat:
        items:
          $ref: '#/definitions/category.SubCategoryDTO'
        type: array
    type: object
  category.Language:
    properties:
      en:
        type: string
      ru:
        type: string
      tm:
        type: string
    type: object
  category.PaginationDTO:
    properties:
      Id:
        type: integer
      limit:
        type: integer
      page:
        type: integer
    type: object
  category.ReqIdDTO:
    properties:
      Id:
        type: string
    type: object
  category.SubCategoryDTO:
    properties:
      Id:
        type: integer
      catId:
        type: string
      categoryTitle:
        $ref: '#/definitions/category.Language'
      createdAt:
        type: string
      imagePath:
        type: string
      name:
        $ref: '#/definitions/category.Language'
    type: object
  category.SubCategoryIdDTO:
    properties:
      Id:
        type: integer
      catId:
        type: integer
      name:
        $ref: '#/definitions/category.Language'
      status:
        type: boolean
    type: object
  edu_admin.EduAdminDTO:
    properties:
      Id:
        type: integer
      avatar:
        type: string
      createdAt:
        type: string
      eduBranchId:
        type: integer
      fullName:
        type: string
      logo:
        type: string
      mail:
        type: string
      name:
        $ref: '#/definitions/edu_admin.Language'
      phoneNumber:
        type: string
      region:
        type: string
      status:
        type: boolean
    type: object
  edu_admin.Language:
    properties:
      en:
        type: string
      ru:
        type: string
      tm:
        type: string
    type: object
  edu_admin.ReqUUIDDTO:
    properties:
      Id:
        type: integer
    type: object
  edu_center.EduCentBranchDTO:
    properties:
      Id:
        type: integer
      address:
        $ref: '#/definitions/edu_center.Language'
      createdAt:
        type: string
      eduId:
        type: integer
      mail:
        type: string
      phoneNumber:
        type: string
      region:
        type: string
    type: object
  edu_center.EduCentDTO:
    properties:
      Id:
        type: integer
      bgImage:
        type: string
      content:
        $ref: '#/definitions/edu_center.Language'
      count:
        type: integer
      createdAt:
        type: string
      fullName:
        type: string
      logo:
        type: string
      name:
        $ref: '#/definitions/edu_center.Language'
      phoneNumber:
        type: string
      region:
        type: string
    type: object
  edu_center.Language:
    properties:
      en:
        type: string
      ru:
        type: string
      tm:
        type: string
    type: object
  edu_center.ReqUUIDDTO:
    properties:
      ID:
        type: integer
    type: object
host: localhost:5000
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Testing Swagger APIs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Admin Course APIs
  version: "1.0"
paths:
  /banner/add:
    post:
      consumes:
      - application/json
      description: create and update data  banner
      parameters:
      - description: Create JSON
        in: body
        name: banner
        required: true
        schema:
          $ref: '#/definitions/banner.BannerDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - banner
  /banner/delete:
    post:
      consumes:
      - application/json
      description: delete data  banner
      parameters:
      - description: Delete JSON
        in: body
        name: banner
        required: true
        schema:
          $ref: '#/definitions/banner.ReqUUIDDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - banner
  /banner/get:
    get:
      consumes:
      - application/json
      description: one data banner
      parameters:
      - description: Get One JSON
        in: body
        name: banner
        required: true
        schema:
          $ref: '#/definitions/banner.ReqUUIDDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/banner.BannerDTO'
      security:
      - BearerAuth: []
      tags:
      - banner
  /banner/get-all:
    get:
      consumes:
      - application/json
      description: all data banner
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/banner.BannerDTO'
            type: array
      security:
      - BearerAuth: []
      tags:
      - banner
  /categories/add:
    post:
      consumes:
      - application/json
      description: create and update data  categories
      parameters:
      - description: Create JSON
        in: body
        name: categories
        required: true
        schema:
          $ref: '#/definitions/category.CategoryIdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - categories
  /categories/delete:
    post:
      consumes:
      - application/json
      description: delete data  banner
      parameters:
      - description: Delete JSON
        in: body
        name: categories
        required: true
        schema:
          $ref: '#/definitions/category.ReqIdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - categories
  /categories/get:
    post:
      consumes:
      - application/json
      description: one data category
      parameters:
      - description: Get One JSON
        in: body
        name: categories
        required: true
        schema:
          $ref: '#/definitions/category.PaginationDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.DataDTO'
      security:
      - BearerAuth: []
      tags:
      - categories
  /categories/get-all:
    get:
      consumes:
      - application/json
      description: all data categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/category.CategoryDTO'
            type: array
      security:
      - BearerAuth: []
      tags:
      - categories
  /categories/sub-add:
    post:
      consumes:
      - application/json
      description: create and update data  sub-categories
      parameters:
      - description: Create JSON
        in: body
        name: categories
        required: true
        schema:
          $ref: '#/definitions/category.SubCategoryIdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - categories
  /categories/sub-delete:
    post:
      consumes:
      - application/json
      description: delete data  sub-categories
      parameters:
      - description: Delete JSON
        in: body
        name: categories
        required: true
        schema:
          $ref: '#/definitions/category.ReqIdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - categories
  /edu-admin/add:
    post:
      consumes:
      - application/json
      description: create and update data  edu admin
      parameters:
      - description: Create JSON
        in: body
        name: admin/edu-admin
        required: true
        schema:
          $ref: '#/definitions/edu_admin.EduAdminDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - admin/edu-admin
  /edu-admin/delete:
    post:
      consumes:
      - application/json
      description: delete data  edu-admin
      parameters:
      - description: Delete JSON
        in: body
        name: admin/edu-admin
        required: true
        schema:
          $ref: '#/definitions/edu_admin.ReqUUIDDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - admin/edu-admin
  /edu-admin/get-all:
    get:
      consumes:
      - application/json
      description: all data edu center
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/edu_admin.EduAdminDTO'
            type: array
      security:
      - BearerAuth: []
      tags:
      - admin/edu-admin
  /edu-center/add:
    post:
      consumes:
      - application/json
      description: create and update data  edu center
      parameters:
      - description: Create JSON
        in: body
        name: admin/edu-center
        required: true
        schema:
          $ref: '#/definitions/edu_center.EduCentDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - admin/edu-center
  /edu-center/add-branch:
    post:
      consumes:
      - application/json
      description: create and update data  edu center branch
      parameters:
      - description: Create JSON
        in: body
        name: admin/edu-center
        required: true
        schema:
          $ref: '#/definitions/edu_center.EduCentBranchDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - admin/edu-center
  /edu-center/delete:
    post:
      consumes:
      - application/json
      description: delete data  edu-center
      parameters:
      - description: Delete JSON
        in: body
        name: admin/edu-center
        required: true
        schema:
          $ref: '#/definitions/edu_center.ReqUUIDDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - admin/edu-center
  /edu-center/delete-branch:
    post:
      consumes:
      - application/json
      description: delete data  edu-center branch
      parameters:
      - description: Delete JSON
        in: body
        name: admin/edu-center
        required: true
        schema:
          $ref: '#/definitions/edu_center.ReqUUIDDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - admin/edu-center
  /edu-center/get-all:
    get:
      consumes:
      - application/json
      description: all data edu center
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/edu_center.EduCentDTO'
            type: array
      security:
      - BearerAuth: []
      tags:
      - admin/edu-center
  /edu-center/get-one:
    post:
      consumes:
      - application/json
      description: get data quater
      parameters:
      - description: Get One JSON
        in: body
        name: admin/edu-center
        required: true
        schema:
          $ref: '#/definitions/edu_center.ReqUUIDDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/edu_center.EduCentBranchDTO'
            type: array
      security:
      - BearerAuth: []
      tags:
      - admin/edu-center
  /file:
    post:
      consumes:
      - multipart/form-data
      description: file upload
      parameters:
      - description: this is a test file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - auth
  /get-profile:
    post:
      consumes:
      - application/json
      description: profile data for Admin
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.ResUserDTO'
      security:
      - BearerAuth: []
      tags:
      - auth
  /login:
    post:
      consumes:
      - application/json
      description: login for Admin
      parameters:
      - description: Login JSON
        in: body
        name: auth
        required: true
        schema:
          $ref: '#/definitions/auth.LoginDTO'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            type: string
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
