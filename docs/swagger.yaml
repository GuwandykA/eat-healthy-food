basePath: /v1
definitions:
  appresult.AppError:
    properties:
      code:
        type: string
      message:
        type: string
      status:
        type: boolean
    type: object
  appresult.AppSuccess:
    properties:
      code:
        type: string
      data: {}
      message:
        type: string
      status:
        type: boolean
    type: object
  banner.AddBannerDTO:
    properties:
      imagePath:
        type: string
    type: object
  banner.DataBannerDTO:
    properties:
      banners:
        items:
          $ref: '#/definitions/banner.GetBannerDTO'
        type: array
      count:
        type: integer
    type: object
  banner.GetBannerDTO:
    properties:
      Id:
        type: integer
      imagePath:
        type: string
    type: object
  category.CategoryDTO:
    properties:
      Id:
        type: integer
      count:
        type: integer
      createdAt:
        type: string
      image:
        type: string
      name:
        type: string
    type: object
  category.CategoryIdDTO:
    properties:
      Id:
        type: integer
      image:
        type: string
      name:
        type: string
    type: object
  category.DataDTO:
    properties:
      count:
        type: integer
      subCat:
        items:
          $ref: '#/definitions/category.SubCategoryDTO'
        type: array
    type: object
  category.ReqIdDTO:
    properties:
      Id:
        type: integer
    type: object
  category.SubCategoryDTO:
    properties:
      Id:
        type: integer
      catName:
        type: string
      createdAt:
        type: string
      imagePath:
        type: string
      item: {}
      name:
        type: string
    type: object
  category.SubCategoryIdDTO:
    properties:
      Id:
        type: integer
      catId:
        type: integer
      image:
        type: string
      item: {}
      name:
        type: string
    type: object
  news.AddNewsDTO:
    properties:
      content:
        type: string
      date:
        type: string
      imagePath:
        type: string
      title:
        type: string
    type: object
  news.DataNewsDTO:
    properties:
      count:
        type: integer
      news:
        items:
          $ref: '#/definitions/news.GetNewsDTO'
        type: array
    type: object
  news.GetNewsDTO:
    properties:
      Id:
        type: integer
      content:
        type: string
      created_at:
        type: string
      date:
        type: string
      imagePath:
        type: string
      title:
        type: string
    type: object
host: 45.141.79.220:8081
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Testing Swagger APIs.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Admin Course APIs
  version: "1.0"
paths:
  /banner:
    get:
      consumes:
      - application/json
      description: all data banner
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/banner.DataBannerDTO'
      security:
      - BearerAuth: []
      tags:
      - banner
    post:
      consumes:
      - application/json
      description: create banner
      parameters:
      - description: Create JSON
        in: body
        name: banner
        required: true
        schema:
          $ref: '#/definitions/banner.AddBannerDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/banner.GetBannerDTO'
      security:
      - BearerAuth: []
      tags:
      - banner
  /banner/{id}:
    delete:
      consumes:
      - application/json
      description: delete banner
      parameters:
      - description: banner ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - banner
    get:
      consumes:
      - application/json
      description: one data banner
      parameters:
      - description: banner ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/banner.GetBannerDTO'
      security:
      - BearerAuth: []
      tags:
      - banner
    put:
      consumes:
      - application/json
      description: update banner
      parameters:
      - description: banner ID
        in: path
        name: id
        required: true
        type: integer
      - description: Create JSON
        in: body
        name: banner
        required: true
        schema:
          $ref: '#/definitions/banner.AddBannerDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - banner
  /categories/add:
    post:
      consumes:
      - application/json
      description: create and update data  categories
      parameters:
      - description: Create JSON
        in: body
        name: categories
        required: true
        schema:
          $ref: '#/definitions/category.CategoryIdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - categories
  /categories/add-product:
    post:
      consumes:
      - application/json
      description: create and update data  product
      parameters:
      - description: Create JSON
        in: body
        name: categories
        required: true
        schema:
          $ref: '#/definitions/category.SubCategoryIdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - categories
  /categories/delete:
    post:
      consumes:
      - application/json
      description: delete data  banner
      parameters:
      - description: Delete JSON
        in: body
        name: categories
        required: true
        schema:
          $ref: '#/definitions/category.ReqIdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - categories
  /categories/delete-product:
    post:
      consumes:
      - application/json
      description: delete data  product
      parameters:
      - description: Delete JSON
        in: body
        name: categories
        required: true
        schema:
          $ref: '#/definitions/category.ReqIdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - categories
  /categories/file:
    post:
      consumes:
      - multipart/form-data
      description: file upload
      parameters:
      - description: this is a test file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - file
  /categories/get:
    post:
      consumes:
      - application/json
      description: one data category
      parameters:
      - description: Get One JSON
        in: body
        name: categories
        required: true
        schema:
          $ref: '#/definitions/category.ReqIdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.DataDTO'
      security:
      - BearerAuth: []
      tags:
      - categories
  /categories/get-all:
    get:
      consumes:
      - application/json
      description: all data categories
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/category.CategoryDTO'
            type: array
      security:
      - BearerAuth: []
      tags:
      - categories
  /categories/get-product:
    post:
      consumes:
      - application/json
      description: product data
      parameters:
      - description: Get One JSON
        in: body
        name: categories
        required: true
        schema:
          $ref: '#/definitions/category.ReqIdDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/category.SubCategoryDTO'
      security:
      - BearerAuth: []
      tags:
      - categories
  /news:
    get:
      consumes:
      - application/json
      description: all data news
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/news.DataNewsDTO'
      security:
      - BearerAuth: []
      tags:
      - banner
    post:
      consumes:
      - application/json
      description: create banner
      parameters:
      - description: Create JSON
        in: body
        name: news
        required: true
        schema:
          $ref: '#/definitions/news.AddNewsDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/news.GetNewsDTO'
      security:
      - BearerAuth: []
      tags:
      - news
  /news/{id}:
    delete:
      consumes:
      - application/json
      description: delete banner
      parameters:
      - description: news id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - BearerAuth: []
      tags:
      - banner
    get:
      consumes:
      - application/json
      description: one data news
      parameters:
      - description: news id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/news.GetNewsDTO'
      security:
      - BearerAuth: []
      tags:
      - news
    put:
      consumes:
      - application/json
      description: update news
      parameters:
      - description: news id
        in: path
        name: id
        required: true
        type: integer
      - description: Create JSON
        in: body
        name: news
        required: true
        schema:
          $ref: '#/definitions/news.AddNewsDTO'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/news.GetNewsDTO'
      security:
      - BearerAuth: []
      tags:
      - news
swagger: "2.0"
